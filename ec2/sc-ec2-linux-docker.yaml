AWSTemplateFormatVersion: '2010-09-09'
Description: 'Service Catalog: EC2 Docker'
Metadata:
  cfn-lint:
    config:
      ignore_checks:
        - E7001
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: EC2 Instance Configuration
        Parameters:
          - EC2InstanceType
          - AMI
          - VolumeSize
    ParameterLabels:
      EC2InstanceType:
        default: EC2 Instance Type
      AMI:
        default: Base Image
      VolumeSize:
        default: Disk Size
Mappings:
  AMIs:
    AmazonLinuxDocker:
      AmiId: "ami-0559a96a9284c1223"  # https://github.com/Sage-Bionetworks-IT/packer-amazonlinux-docker/tree/v1.0.0
  AccountToImportParams:
    'Fn::Transform':
      Name: 'AWS::Include'
      Parameters:
        # include is @ https://github.com/Sage-Bionetworks/admincentral-infra/blob/master/templates/cfn-service-catalog-snippets.yaml
        Location: s3://cfn-snippets-bucket-cloudformationsnippetsbucket-elu83sv8ocdz/scipool-sc-lib-infra/ScAccountToExportMappping.yaml
Parameters:
  EC2InstanceType:
    AllowedValues:
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5d.large
      - c5d.xlarge
      - c5d.2xlarge
      - c5d.4xlarge
      - c5n.large
      - c5n.xlarge
      - c5n.2xlarge
      - c5n.4xlarge
      - i3en.large
      - i3en.xlarge
      - i3en.2xlarge
      - g4dn.xlarge
      - g4dn.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5ad.large
      - m5ad.xlarge
      - m5ad.2xlarge
      - m5ad.4xlarge
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5dn.large
      - m5dn.xlarge
      - m5dn.2xlarge
      - m5dn.4xlarge
      - m5n.large
      - m5n.xlarge
      - m5n.2xlarge
      - m5n.4xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5a.large
      - r5a.xlarge
      - r5a.2xlarge
      - r5a.4xlarge
      - r5ad.large
      - r5ad.xlarge
      - r5ad.2xlarge
      - r5ad.4xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5dn.large
      - r5dn.xlarge
      - r5dn.2xlarge
      - r5n.large
      - r5n.xlarge
      - r5n.2xlarge
      - r5n.4xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - t3a.nano
      - t3a.micro
      - t3a.small
      - t3a.medium
      - t3a.large
      - t3a.xlarge
      - t3a.2xlarge
      - x2gd.medium
      - x2gd.large
      - x2gd.xlarge
      - x2gd.2xlarge
    Default: t3.micro
    Description: Amazon EC2 Instance Type
    Type: String
  AMI:
    Type: String
    Description: The base AMI for the instance
    Default: AmazonLinuxDocker
    AllowedValues:
      - AmazonLinuxDocker
  VolumeSize:
    Description: The EC2 volume size (in GB)
    Type: Number
    Default: 16
    MinValue: 16
    MaxValue: 5000
Resources:
  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      ManagedPolicyArns:
        - !ImportValue
          'Fn::Sub': '${AWS::Region}-essentials-TagRootVolumePolicy'
        - !ImportValue
          'Fn::Sub': '${AWS::Region}-cfn-tag-instance-policy-TagInstancePolicy'
        - !ImportValue
          'Fn::Sub': '${AWS::Region}-get-role-policy-ReadAssumedRoleInformationPolicy'
        - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - ssm.amazonaws.com #For maintenance service
            Action:
              - sts:AssumeRole
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref 'InstanceRole'
  EC2Instance:
    Type: AWS::EC2::Instance
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E1022
            - W1011
      'AWS::CloudFormation::Init':
        configSets:
          SetupCfn:
            - cfn_hup_service
          SetEnv:
            - set_env_vars
        cfn_hup_service:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                verbose=true
                interval=5
              mode: "000400"
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.EC2Instance.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance --configsets SetupCfn,SetEnv --region ${AWS::Region}
              mode: "000400"
              owner: root
              group: root
            /lib/systemd/system/cfn-hup.service:
              content: |
                [Unit]
                Description=cfn-hup daemon

                [Service]
                Type=simple
                ExecStart=/opt/aws/bin/cfn-hup
                Restart=always

                [Install]
                WantedBy=multi-user.target
              mode: "000400"
              owner: root
              group: root
          commands:
            01_enable_cfn-hup:
              command: "/bin/systemctl enable cfn-hup.service"
            02_start_cfn-hup:
              command: "/bin/systemctl start cfn-hup.service"
        set_env_vars:
          files:
            /opt/sage/bin/make_env_vars_file.sh:
              source: "https://raw.githubusercontent.com/Sage-Bionetworks/service-catalog-utils/v1.0.5/linux/opt/sage/bin/make_env_vars_file.sh"
              mode: "00744"
              owner: "root"
              group: "root"
          commands:
            01_make_env_vars_file:
              command: "/bin/bash /opt/sage/bin/make_env_vars_file.sh"
              env:
                AWS_REGION: !Ref AWS::Region
                STACK_NAME: !Ref AWS::StackName
                STACK_ID: !Ref AWS::StackId
    Properties:
      ImageId: !FindInMap [AMIs, !Ref AMI, AmiId]
      InstanceType: !Ref 'EC2InstanceType'
      SubnetId: !ImportValue
          'Fn::FindInMap': [AccountToImportParams, !Ref "AWS::AccountId", PrivateSubnet]
      BlockDeviceMappings:
        - DeviceName: "/dev/xvda"
          Ebs:
            DeleteOnTermination: true
            VolumeSize: !Ref VolumeSize
            Encrypted: true
      IamInstanceProfile: !Ref 'InstanceProfile'
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance --configsets SetupCfn,SetEnv --region ${AWS::Region}
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region}
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
        - Key: Description
          Value: !Sub "Service Catalog instance created by ${AWS::StackName}"
        - Key: "ManagedInstanceMaintenanceTarget"
          Value: "yes"
        - Key: "PatchGroup"
          Value: "prod-default"
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
  TagInstance:
    DependsOn: "InstanceProfile"
    Type: Custom::SynapseTagger
    Properties:
      ServiceToken: !ImportValue
        'Fn::Sub': '${AWS::Region}-cfn-cr-synapse-tagger-SetInstanceTagsFunctionArn'
      InstanceId: !Ref EC2Instance
Outputs:
  EC2InstanceId:
    Description: 'The ID of the EC2 instance'
    Value: !Ref 'EC2Instance'
  EC2InstancePrivateIpAddress:
    Description: 'The IP Address of the EC2 instance'
    Value: !GetAtt 'EC2Instance.PrivateIp'
  EC2InstanceType:
    Description: 'The EC2 instance type'
    Value: !Ref 'EC2InstanceType'
  ConnectionURI:
    Description: 'Starts a shell session in the AWS Console'
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/systems-manager/session-manager/${EC2Instance}?region=${AWS::Region}"
  EC2ConsoleURI:
    Description: 'Check your instance status with this link to the AWS Console'
    Value: !Sub "https://console.aws.amazon.com/ec2/v2/home?region=${AWS::Region}#Instances:search=${EC2Instance}"
  Documentation:
    Description: 'Service Catalog Documentation'
    Value: "https://help.sc.sageit.org/sc/Service-Catalog-Provisioning.938836322.html"
